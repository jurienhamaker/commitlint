permissions:
  packages: write
  contents: write

on:
  release:
    types: [created]

name: release
jobs:
  set-env-version:
  runs-on: ubuntu-latest
  steps:
    - name: Set env
      run: echo "VERSION=$(echo "${{ github.ref_name }}" | sed 's/v//g')" >> $GITHUB_ENV
  goreleaser:
    runs-on: ubuntu-latest
    needs: set-env-version
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v5
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG: ${{ github.ref_name }}
          VERSION: ${{ github.ref_name }}
          GITHUB_PERSONAL_AUTH_TOKEN: ${{ secrets.PAT }}
          AUR_PRIVATE_KEY: ${{ secrets.AUR_SSH_PRIVATE_KEY }}
          AUR_USERNAME: ${{ secrets.AUR_USERNAME }}
          AUR_EMAIL: ${{ secrets.AUR_EMAIL }}
          # GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
        with:
          # either 'goreleaser' (default) or 'goreleaser-pro'
          distribution: goreleaser
          # 'latest', 'nightly', or a semver
          version: "~> v2"
          args: release --clean
  create-msi:
    runs-on: windows-latest
    needs: goreleaser
    steps:
      - uses: actions/checkout@v4

      - name: Download latest release and unzip
        run: |
          $github = Invoke-WebRequest -Uri https://api.github.com/repos/jurienhamaker/commitlint/releases/latest | ConvertFrom-Json
          $installerUrl = $github.assets | Where-Object -Property name -match 'commitlint_Windows_x86_64.zip' | Select -ExpandProperty browser_download_url -First 1
          Invoke-WebRequest $installerUrl -OutFile windows.zip
          Expand-Archive -Path windows.zip -DestinationPath unzipped

      - name: Install go-msi
        run: choco install -y "go-msi"

      - name: "Build MSI"
        run: |
          $version = '${{github.ref_name}}'.Replace('v', '');
          & 'C:\Program Files\go-msi\go-msi.exe' set-guid --path $PWD/wix.json
          & 'C:\Program Files\go-msi\go-msi.exe' make --path $PWD/wix.json --msi commitlint_installer.msi --out $PWD/dist --version $version

      - name: upload installer
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: commitlint_installer.msi
          asset_name: commitlint_installer.msi
          tag: ${{ github.ref_name }}
          overwrite: true
  update-winget:
    name: Publish winget package
    runs-on: ubuntu-latest
    needs: create-msi
    steps:
      - name: Submit package to Windows Package Manager Community Repository
        uses: vedantmgoyal2009/winget-releaser@v2
        with:
          identifier: Commitlint.Commitlint
          # Exclude all `*-msvc-full.msi` full release files,
          # and only the default `*msvc.msi` files will be included
          installers-regex: 'commitlint_installer\.msi$'
          version: ${{ env.VERSION }}
          release-tag: ${{ github.ref_name }}
          token: ${{ secrets.PAT }}
          fork-user: jurienhamaker
