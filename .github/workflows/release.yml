env:
  IMAGE_NAME: jurienhamaker/commitlint
  REGISTRY: ghcr.io

permissions:
  packages: write
  contents: write

on:
  release:
    types: [created]

name: release
jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v5
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG: ${{ github.ref_name }}
          VERSION: ${{ github.ref_name }}
          # GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
        with:
          # either 'goreleaser' (default) or 'goreleaser-pro'
          distribution: goreleaser
          # 'latest', 'nightly', or a semver
          version: "~> v2"
          args: release --clean
  # binary:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       # build and publish in parallel: linux/386, linux/amd64, linux/arm64, windows/386, windows/amd64, darwin/amd64, darwin/arm64
  #       goos: [linux, windows, darwin]
  #       goarch: ["386", amd64, arm64]
  #       exclude:
  #         - goarch: "386"
  #           goos: darwin
  #         - goarch: arm64
  #           goos: windows
  #   steps:
  #     - uses: actions/checkout@v4
  #
  #     - uses: wangyoucao577/go-release-action@v1
  #       id: build
  #       with:
  #         project_path: ./cmd/commitlint
  #         ldflags: -s -w -X=main.Version=${{github.ref_name}} -X=main.CommitSHA=${{ github.sha }}
  #         github_token: ${{ secrets.GITHUB_TOKEN }}
  #         goos: ${{ matrix.goos }}
  #         goarch: ${{ matrix.goarch }}
  #         release_name: ${{ github.ref_name }}
